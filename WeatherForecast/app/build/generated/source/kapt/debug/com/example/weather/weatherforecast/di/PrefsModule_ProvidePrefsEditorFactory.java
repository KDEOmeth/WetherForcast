// Generated by Dagger (https://dagger.dev).
package com.example.weather.weatherforecast.di;

import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PrefsModule_ProvidePrefsEditorFactory implements Factory<SharedPreferences.Editor> {
  private final PrefsModule module;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public PrefsModule_ProvidePrefsEditorFactory(PrefsModule module,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.module = module;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public SharedPreferences.Editor get() {
    return providePrefsEditor(module, sharedPreferencesProvider.get());
  }

  public static PrefsModule_ProvidePrefsEditorFactory create(PrefsModule module,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new PrefsModule_ProvidePrefsEditorFactory(module, sharedPreferencesProvider);
  }

  public static SharedPreferences.Editor providePrefsEditor(PrefsModule instance,
      SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNull(instance.providePrefsEditor(sharedPreferences), "Cannot return null from a non-@Nullable @Provides method");
  }
}
