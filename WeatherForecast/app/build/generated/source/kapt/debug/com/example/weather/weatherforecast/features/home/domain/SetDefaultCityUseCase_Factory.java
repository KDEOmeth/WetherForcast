// Generated by Dagger (https://dagger.dev).
package com.example.weather.weatherforecast.features.home.domain;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SetDefaultCityUseCase_Factory implements Factory<SetDefaultCityUseCase> {
  private final Provider<CitiesRepository> citiesRepositoryProvider;

  public SetDefaultCityUseCase_Factory(Provider<CitiesRepository> citiesRepositoryProvider) {
    this.citiesRepositoryProvider = citiesRepositoryProvider;
  }

  @Override
  public SetDefaultCityUseCase get() {
    return newInstance(citiesRepositoryProvider.get());
  }

  public static SetDefaultCityUseCase_Factory create(
      Provider<CitiesRepository> citiesRepositoryProvider) {
    return new SetDefaultCityUseCase_Factory(citiesRepositoryProvider);
  }

  public static SetDefaultCityUseCase newInstance(CitiesRepository citiesRepository) {
    return new SetDefaultCityUseCase(citiesRepository);
  }
}
