// Generated by Dagger (https://dagger.dev).
package com.example.weather.weatherforecast.features.home.domain;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PopulateCitiesUseCase_Factory implements Factory<PopulateCitiesUseCase> {
  private final Provider<CitiesRepository> citiesRepositoryProvider;

  public PopulateCitiesUseCase_Factory(Provider<CitiesRepository> citiesRepositoryProvider) {
    this.citiesRepositoryProvider = citiesRepositoryProvider;
  }

  @Override
  public PopulateCitiesUseCase get() {
    return newInstance(citiesRepositoryProvider.get());
  }

  public static PopulateCitiesUseCase_Factory create(
      Provider<CitiesRepository> citiesRepositoryProvider) {
    return new PopulateCitiesUseCase_Factory(citiesRepositoryProvider);
  }

  public static PopulateCitiesUseCase newInstance(CitiesRepository citiesRepository) {
    return new PopulateCitiesUseCase(citiesRepository);
  }
}
