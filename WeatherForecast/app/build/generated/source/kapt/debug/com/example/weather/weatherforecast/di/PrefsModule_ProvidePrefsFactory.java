// Generated by Dagger (https://dagger.dev).
package com.example.weather.weatherforecast.di;

import android.content.Context;
import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PrefsModule_ProvidePrefsFactory implements Factory<SharedPreferences> {
  private final PrefsModule module;

  private final Provider<Context> contextProvider;

  public PrefsModule_ProvidePrefsFactory(PrefsModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public SharedPreferences get() {
    return providePrefs(module, contextProvider.get());
  }

  public static PrefsModule_ProvidePrefsFactory create(PrefsModule module,
      Provider<Context> contextProvider) {
    return new PrefsModule_ProvidePrefsFactory(module, contextProvider);
  }

  public static SharedPreferences providePrefs(PrefsModule instance, Context context) {
    return Preconditions.checkNotNull(instance.providePrefs(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
